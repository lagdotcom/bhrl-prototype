{
  "version": 3,
  "sources": ["globalExternal:wglt", "../src/Engine.ts", "../src/Entity.ts", "../src/prefabs/battleship.ts", "../src/Layer.ts", "../src/prefabs/bullet.ts", "../src/prefabs/effect.ts", "../src/prefabs/gun.ts", "../src/prefabs/player.ts", "../src/prefabs/index.ts", "../src/tools/int.ts", "../src/SortedList.ts", "../src/tools/angleDiff.ts", "../src/tools/angleMove.ts", "../src/logic/turretReducer.ts", "../src/walkGrid.ts", "../src/index.ts"],
  "sourcesContent": ["module.exports = globalThis.wglt", "import { Colors, Console, Terminal } from \"wglt\";\r\nimport Entity, { compareEntities } from \"@app/Entity\";\r\nimport instantiate, { PrefabName } from \"@app/prefabs\";\r\nimport int, { intPosition } from \"@app/tools/int\";\r\n\r\nimport { Position } from \"@app/components\";\r\nimport SortedList from \"@app/SortedList\";\r\nimport angleDiff from \"@app/tools/angleDiff\";\r\nimport angleMove from \"@app/tools/angleMove\";\r\nimport turretReducer from \"@app/logic/turretReducer\";\r\nimport walkGrid from \"@app/walkGrid\";\r\n\r\nconst MAP_WIDTH = 60;\r\nconst MAP_HEIGHT = 40;\r\n\r\nexport default class Engine {\r\n  lastEntityId: number;\r\n\r\n  dirty: boolean;\r\n  fovRecompute: boolean;\r\n  map: Console;\r\n  entities: SortedList<Entity>;\r\n\r\n  constructor(public term: Terminal) {\r\n    term.update = this.update.bind(this);\r\n\r\n    this.dirty = true;\r\n    this.fovRecompute = true;\r\n    this.map = new Console(MAP_WIDTH, MAP_HEIGHT, () => true);\r\n    this.lastEntityId = 0;\r\n    this.entities = new SortedList(compareEntities);\r\n  }\r\n\r\n  get player() {\r\n    const player = this.entities.get().find((e) => e.player);\r\n    if (!player) throw new Error(\"Could not find a player!\");\r\n    return player;\r\n  }\r\n\r\n  spawn(name: PrefabName) {\r\n    return instantiate(this, name);\r\n  }\r\n\r\n  add(e: Entity) {\r\n    this.dirty = true;\r\n    this.entities.add(e);\r\n  }\r\n\r\n  addMany(es: Entity[]) {\r\n    this.dirty = true;\r\n    for (const e of es) this.add(e);\r\n  }\r\n\r\n  gotoDemoRoom() {\r\n    this.entities.clear();\r\n\r\n    this.map.clear();\r\n    this.room(1, 1, 40, 30);\r\n    this.spawn(\"Player\").move(5, 25);\r\n    this.spawn(\"Battleship\").move(8, 5);\r\n  }\r\n\r\n  room(sx: number, sy: number, w: number, h: number) {\r\n    const { map } = this;\r\n\r\n    for (let yo = 0; yo < h; yo++) {\r\n      for (let xo = 0; xo < w; xo++) {\r\n        const wall = xo === 0 || yo === 0 || xo === w - 1 || yo === h - 1;\r\n        const x = sx + xo;\r\n        const y = sy + yo;\r\n\r\n        map.setBlocked(x, y, wall);\r\n        map.setBlockedSight(x, y, wall);\r\n      }\r\n    }\r\n  }\r\n\r\n  draw() {\r\n    const { map, player, term, entities } = this;\r\n\r\n    if (this.fovRecompute) {\r\n      map.computeFov(player.position!.x, player.position!.y, 20);\r\n      this.fovRecompute = false;\r\n    }\r\n\r\n    for (let y = 0; y < MAP_HEIGHT; y++) {\r\n      for (let x = 0; x < MAP_WIDTH; x++) {\r\n        const cell = map.grid[y][x];\r\n        const visible = map.isVisible(x, y);\r\n        const wall = cell.blockedSight;\r\n        let color = Colors.BLACK;\r\n\r\n        if (visible) {\r\n          // It's visible\r\n          color = wall ? Colors.WHITE : Colors.DARK_GRAY;\r\n          cell.explored = true;\r\n        } else if (cell.explored) {\r\n          // It's remembered\r\n          color = wall ? Colors.LIGHT_GRAY : Colors.BLACK;\r\n        }\r\n\r\n        term.drawChar(x, y, 0, 0, color);\r\n      }\r\n    }\r\n\r\n    const draw = (x: number, y: number, g: string, f?: number, b?: number) => {\r\n      if (map.isVisible(x, y)) term.drawChar(x, y, g, f, b);\r\n    };\r\n\r\n    for (const e of entities.get()) {\r\n      const { appearance, position } = e;\r\n\r\n      if (appearance && position)\r\n        draw(\r\n          int(position.x),\r\n          int(position.y),\r\n          appearance.glyph,\r\n          appearance.fg,\r\n          appearance.bg\r\n        );\r\n    }\r\n\r\n    this.dirty = false;\r\n  }\r\n\r\n  getRootID(e: Entity): number {\r\n    return e.attachment ? this.getRootID(e.attachment.parent) : e.id;\r\n  }\r\n\r\n  getContents(pos: Position) {\r\n    const ipos = { x: int(pos.x), y: int(pos.y) };\r\n\r\n    const wall = this.map.isBlocked(ipos.x, ipos.y);\r\n    const entities = this.entities\r\n      .get()\r\n      .filter(\r\n        (e) => int(e.position?.x) === ipos.x && int(e.position?.y) == ipos.y\r\n      );\r\n    const solid = entities.find((e) => e.solid);\r\n\r\n    return { wall, solid, other: entities.filter((e) => !e.solid) };\r\n  }\r\n\r\n  lifetimes() {\r\n    for (const e of this.entities.get()) {\r\n      const { lifetime } = e;\r\n\r\n      if (lifetime) {\r\n        if (--lifetime.duration <= 0) e.kill();\r\n      }\r\n    }\r\n  }\r\n\r\n  homing() {\r\n    const playerPos = this.player.position!;\r\n\r\n    for (const e of this.entities.get()) {\r\n      const { homing, motion, position } = e;\r\n\r\n      if (homing && motion && position) {\r\n        const desired = Math.atan2(\r\n          playerPos.y - position.y,\r\n          playerPos.x - position.x\r\n        );\r\n        const diff = angleDiff(motion.angle, desired);\r\n\r\n        if (Math.abs(diff) <= homing.strength) motion.angle = desired;\r\n        else if (diff < 0) motion.angle -= homing.strength;\r\n        else motion.angle += homing.strength;\r\n\r\n        if (--homing.duration <= 0) {\r\n          e.setHoming();\r\n          e.setTrail();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  turrets() {\r\n    const { entities } = this;\r\n    const playerPos = this.player.position!;\r\n\r\n    for (const e of entities.get()) {\r\n      const { position, turret } = e;\r\n      if (position && turret) {\r\n        turretReducer(turret);\r\n        if (turret.mode === \"fire\") {\r\n          this.spawn(turret.bulletPrefab)\r\n            .setIgnoreSolid({ ids: [this.getRootID(e)] })\r\n            .setPosition({ x: position.x + 0.5, y: position.y + 0.5 })\r\n            .setMotion({\r\n              angle: Math.atan2(\r\n                playerPos.y - position.y,\r\n                playerPos.x - position.x\r\n              ),\r\n              vel: turret.bulletVelocity,\r\n            });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  motion() {\r\n    const { entities } = this;\r\n\r\n    for (const e of entities.get()) {\r\n      const { ignoreSolid, motion, position, trail } = e;\r\n\r\n      if (position && motion) {\r\n        const src = { ...position };\r\n        const [dx, dy] = angleMove(motion);\r\n\r\n        const dst = { x: position.x + dx, y: position.y + dy };\r\n\r\n        const line = walkGrid(intPosition(src), intPosition(dst));\r\n\r\n        let reached = src;\r\n        let hitWall = false;\r\n        let hitEntity: Entity | undefined = undefined;\r\n        for (const pos of line) {\r\n          reached = pos;\r\n\r\n          const { wall, solid } = this.getContents(pos);\r\n          if (wall) {\r\n            hitWall = true;\r\n            break;\r\n          } else if (\r\n            solid &&\r\n            !ignoreSolid?.ids.includes(this.getRootID(solid))\r\n          ) {\r\n            hitEntity = solid;\r\n            break;\r\n          }\r\n\r\n          if (trail && pos !== line.slice(-1)[0])\r\n            this.spawn(trail.effectPrefab).setPosition(pos);\r\n        }\r\n\r\n        if (hitWall) {\r\n          e.kill();\r\n        } else if (hitEntity) {\r\n          // TODO damage etc.\r\n          e.kill();\r\n        } else {\r\n          e.move(dst.x, dst.y);\r\n        }\r\n\r\n        if (!e.alive) {\r\n          // TODO explode etc.\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  kills() {\r\n    for (const e of this.entities.get()) {\r\n      if (!e.alive) this.entities.delete(e);\r\n    }\r\n  }\r\n\r\n  tick() {\r\n    this.lifetimes();\r\n    this.homing();\r\n    this.turrets();\r\n    this.motion();\r\n    this.kills();\r\n  }\r\n\r\n  handleKeys() {\r\n    const { map, player, term } = this;\r\n\r\n    const move = term.getMovementKey();\r\n    if (move) {\r\n      const dx = player.position!.x + move.x;\r\n      const dy = player.position!.y + move.y;\r\n\r\n      if (!map.isBlocked(dx, dy)) {\r\n        player.move(dx, dy);\r\n        this.fovRecompute = true;\r\n\r\n        this.tick();\r\n      }\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.handleKeys();\r\n    if (this.dirty) this.draw();\r\n  }\r\n}\r\n", "import {\r\n  Appearance,\r\n  Attachment,\r\n  Homing,\r\n  IgnoreSolid,\r\n  Lifetime,\r\n  Motion,\r\n  Position,\r\n  Trail,\r\n  Turret,\r\n} from \"@app/components\";\r\n\r\nimport Engine from \"@app/Engine\";\r\n\r\nexport default class Entity {\r\n  alive: boolean;\r\n  id: number;\r\n  appearance?: Appearance;\r\n  attachment?: Attachment;\r\n  homing?: Homing;\r\n  ignoreSolid?: IgnoreSolid;\r\n  lifetime?: Lifetime;\r\n  motion?: Motion;\r\n  player: boolean;\r\n  projectile: boolean;\r\n  position?: Position;\r\n  solid: boolean;\r\n  trail?: Trail;\r\n  turret?: Turret;\r\n\r\n  constructor(public g: Engine, public name?: string) {\r\n    this.alive = true;\r\n    this.id = ++g.lastEntityId;\r\n    this.player = false;\r\n    this.projectile = false;\r\n    this.solid = false;\r\n\r\n    g.add(this);\r\n  }\r\n\r\n  get [Symbol.toStringTag]() {\r\n    return this.name;\r\n  }\r\n\r\n  kill(): this {\r\n    this.alive = false;\r\n    this.eachChild((e) => e.kill());\r\n    return this;\r\n  }\r\n\r\n  eachChild(callback: (e: Entity, at: Attachment) => void) {\r\n    for (const e of this.g.entities.get()) {\r\n      if (e.attachment?.parent === this) callback(e, e.attachment);\r\n    }\r\n  }\r\n\r\n  setAppearance(c?: Appearance): this {\r\n    this.g.dirty = true;\r\n    this.appearance = c;\r\n    return this;\r\n  }\r\n\r\n  setAttachment(c?: Attachment): this {\r\n    this.attachment = c;\r\n    return this;\r\n  }\r\n\r\n  setHoming(c?: Homing): this {\r\n    this.homing = c;\r\n    return this;\r\n  }\r\n\r\n  setIgnoreSolid(c?: IgnoreSolid): this {\r\n    this.ignoreSolid = c;\r\n    return this;\r\n  }\r\n\r\n  setLifetime(c?: Lifetime): this {\r\n    this.lifetime = c;\r\n    return this;\r\n  }\r\n\r\n  setMotion(c?: Motion): this {\r\n    this.motion = c;\r\n    return this;\r\n  }\r\n\r\n  setPosition(c?: Position): this {\r\n    this.g.dirty = true;\r\n    this.position = c;\r\n    return this;\r\n  }\r\n\r\n  setTrail(c?: Trail): this {\r\n    this.trail = c;\r\n    return this;\r\n  }\r\n\r\n  setTurret(c?: Turret): this {\r\n    this.turret = c;\r\n    return this;\r\n  }\r\n\r\n  setPlayer(tag: boolean): this {\r\n    this.player = tag;\r\n    return this;\r\n  }\r\n\r\n  setProjectile(tag: boolean): this {\r\n    this.projectile = tag;\r\n    return this;\r\n  }\r\n\r\n  setSolid(tag: boolean): this {\r\n    this.solid = tag;\r\n    return this;\r\n  }\r\n\r\n  move(x: number, y: number) {\r\n    this.g.dirty = true;\r\n    this.position = { x, y };\r\n    this.eachChild((e, at) => e.move(x + at.x, y + at.y));\r\n    return this.position;\r\n  }\r\n}\r\n\r\nexport function compareEntities(a: Entity, b: Entity) {\r\n  const layerA = a.appearance?.layer ?? 0;\r\n  const layerB = b.appearance?.layer ?? 0;\r\n  if (layerA !== layerB) return layerA - layerB;\r\n\r\n  return a.id - b.id;\r\n}\r\n", "import { Colors } from \"wglt\";\r\nimport Engine from \"@app/Engine\";\r\nimport Entity from \"@app/Entity\";\r\nimport Layer from \"@app/Layer\";\r\n\r\nexport function Battleship(g: Engine) {\r\n  const parent = new Entity(g, \"Battleship\");\r\n\r\n  g.spawn(\"BattleshipHull\").setAttachment({ parent, x: 1, y: 0 });\r\n  g.spawn(\"BattleshipHull\").setAttachment({ parent, x: 2, y: 0 });\r\n  g.spawn(\"BattleshipHull\").setAttachment({ parent, x: 0, y: 1 });\r\n  g.spawn(\"BattleshipHull\").setAttachment({ parent, x: 1, y: 1 });\r\n  g.spawn(\"BattleshipHull\").setAttachment({ parent, x: 2, y: 1 });\r\n\r\n  g.spawn(\"MachineGun\").setAttachment({ parent, x: 0, y: 1 });\r\n  g.spawn(\"HomingMissileLauncher\").setAttachment({ parent, x: 2, y: 1 });\r\n\r\n  return parent;\r\n}\r\n\r\nexport function BattleshipHull(g: Engine) {\r\n  return new Entity(g, \"BattleshipHull\")\r\n    .setAppearance({\r\n      glyph: \"/\",\r\n      layer: Layer.Ship,\r\n      fg: Colors.WHITE,\r\n      bg: Colors.BROWN,\r\n    })\r\n    .setSolid(true);\r\n}\r\n", "enum Layer {\r\n  Effect,\r\n  Ship,\r\n  Gun,\r\n  Bullet,\r\n  Player,\r\n}\r\nexport default Layer;\r\n", "import { Colors } from \"wglt\";\r\nimport Engine from \"@app/Engine\";\r\nimport Entity from \"@app/Entity\";\r\nimport Layer from \"@app/Layer\";\r\n\r\nexport function Bullet(g: Engine) {\r\n  return new Entity(g, \"Bullet\")\r\n    .setProjectile(true)\r\n    .setAppearance({ glyph: \".\", layer: Layer.Bullet, fg: Colors.YELLOW });\r\n}\r\n\r\nexport function HomingMissile(g: Engine) {\r\n  const parent = new Entity(g, \"HomingMissile\")\r\n    .setProjectile(true)\r\n    .setHoming({ strength: 0.15, duration: 10 })\r\n    .setTrail({ effectPrefab: \"SmokePuff\" })\r\n    .setAppearance({ glyph: \"*\", layer: Layer.Bullet, fg: Colors.DARK_RED });\r\n\r\n  return parent;\r\n}\r\n", "import { Colors } from \"wglt\";\r\nimport Engine from \"@app/Engine\";\r\nimport Entity from \"@app/Entity\";\r\nimport Layer from \"@app/Layer\";\r\n\r\nexport function SmokePuff(g: Engine) {\r\n  return new Entity(g, \"SmokePuff\")\r\n    .setAppearance({ glyph: \" \", layer: Layer.Effect, bg: Colors.LIGHT_GRAY })\r\n    .setLifetime({ duration: 2 });\r\n}\r\n", "import { Colors } from \"wglt\";\r\nimport Engine from \"@app/Engine\";\r\nimport Entity from \"@app/Entity\";\r\nimport Layer from \"@app/Layer\";\r\n\r\nexport function MachineGun(g: Engine) {\r\n  return new Entity(g, \"MachineGun\")\r\n    .setAppearance({ glyph: \"o\", layer: Layer.Gun, fg: Colors.WHITE })\r\n    .setTurret({\r\n      bulletPrefab: \"Bullet\",\r\n      bulletVelocity: 2,\r\n      salvoCount: 5,\r\n      timeBetweenShots: 0,\r\n      timeBetweenSalvos: 12,\r\n    });\r\n}\r\n\r\nexport function HomingMissileLauncher(g: Engine) {\r\n  return new Entity(g, \"HomingMissileLauncher\")\r\n    .setAppearance({ glyph: \"o\", layer: Layer.Gun, fg: Colors.YELLOW })\r\n    .setTurret({\r\n      bulletPrefab: \"HomingMissile\",\r\n      bulletVelocity: 1,\r\n      salvoCount: 1,\r\n      timeBetweenShots: 8,\r\n      timeBetweenSalvos: 8,\r\n    });\r\n}\r\n", "import { Colors } from \"wglt\";\r\nimport Engine from \"@app/Engine\";\r\nimport Entity from \"@app/Entity\";\r\nimport Layer from \"@app/Layer\";\r\n\r\nexport function Player(g: Engine) {\r\n  return new Entity(g, \"Player\").setPlayer(true).setSolid(true).setAppearance({\r\n    glyph: \">\",\r\n    layer: Layer.Player,\r\n    fg: Colors.WHITE,\r\n    bg: Colors.DARK_RED,\r\n  });\r\n}\r\n", "import * as battleship from \"./battleship\";\r\nimport * as bullet from \"./bullet\";\r\nimport * as effect from \"./effect\";\r\nimport * as gun from \"./gun\";\r\nimport * as player from \"./player\";\r\n\r\nimport Engine from \"@app/Engine\";\r\n\r\nconst AllPrefabs = {\r\n  ...battleship,\r\n  ...bullet,\r\n  ...effect,\r\n  ...gun,\r\n  ...player,\r\n};\r\n\r\nexport type PrefabName = keyof typeof AllPrefabs;\r\n\r\nexport default function instantiate(g: Engine, name: PrefabName) {\r\n  return AllPrefabs[name](g);\r\n}\r\n", "import { Position } from \"@app/components\";\r\n\r\nexport default function int(n?: number) {\r\n  return typeof n === \"undefined\" ? NaN : Math.floor(n);\r\n}\r\n\r\nexport function intPosition(pos: Position): Position {\r\n  return { x: int(pos.x), y: int(pos.y) };\r\n}\r\n", "export default class SortedList<T> {\r\n  dirty: boolean;\r\n\r\n  constructor(\r\n    private compareFn: (a: T, b: T) => number,\r\n    private items: T[] = []\r\n  ) {\r\n    this.dirty = true;\r\n  }\r\n\r\n  clear() {\r\n    this.items = [];\r\n    this.dirty = false;\r\n  }\r\n\r\n  add(item: T) {\r\n    this.items.push(item);\r\n    this.dirty = true;\r\n  }\r\n\r\n  delete(item: T) {\r\n    this.items = this.items.filter((i) => i !== item);\r\n  }\r\n\r\n  sort() {\r\n    this.items.sort(this.compareFn);\r\n    this.dirty = false;\r\n  }\r\n\r\n  get() {\r\n    if (this.dirty) this.sort();\r\n    return this.items.slice();\r\n  }\r\n}\r\n", "const tau = Math.PI * 2;\r\n\r\nexport default function angleDiff(x: number, y: number) {\r\n  const a = (x - y) % tau;\r\n  const b = (y - x) % tau;\r\n\r\n  return a < b ? -a : b;\r\n}\r\n", "import Motion from \"@app/components/Motion\";\r\n\r\nexport default function angleMove(mo: Motion): [dx: number, dy: number] {\r\n  const dx = Math.cos(mo.angle) * mo.vel;\r\n  const dy = Math.sin(mo.angle) * mo.vel;\r\n  return [dx, dy];\r\n}\r\n", "import { Turret } from \"@app/components\";\r\n\r\nexport default function turretReducer(state: Turret) {\r\n  switch (state.mode) {\r\n    case \"fire\":\r\n      state.timer--;\r\n      if (state.salvo > 0) {\r\n        if (state.timer <= 0) state.mode = \"mid-salvo\";\r\n      } else {\r\n        state.mode = \"reloading\";\r\n      }\r\n      break;\r\n\r\n    case \"mid-salvo\":\r\n      state.mode = \"fire\";\r\n      state.salvo--;\r\n      if (state.salvo > 0) state.timer = state.timeBetweenShots;\r\n      else state.timer = state.timeBetweenSalvos;\r\n      break;\r\n\r\n    case \"reloading\":\r\n      state.timer--;\r\n      if (state.timer <= 0) state.mode = \"idle\";\r\n      break;\r\n\r\n    case \"idle\":\r\n    default:\r\n      state.mode = \"fire\";\r\n      state.salvo = state.salvoCount - 1;\r\n      state.timer = state.timeBetweenShots;\r\n      break;\r\n  }\r\n\r\n  return state;\r\n}\r\n", "import { Position } from \"@app/components\";\r\n\r\nexport default function walkGrid(p0: Position, p1: Position) {\r\n  const dx = p1.x - p0.x,\r\n    dy = p1.y - p0.y,\r\n    nx = Math.abs(dx),\r\n    ny = Math.abs(dy),\r\n    signX = dx > 0 ? 1 : -1,\r\n    signY = dy > 0 ? 1 : -1;\r\n\r\n  const p = { ...p0 };\r\n  const points = [{ ...p }];\r\n  for (let ix = 0, iy = 0; ix < nx || iy < ny; ) {\r\n    if ((0.5 + ix) / nx < (0.5 + iy) / ny) {\r\n      // next step is horizontal\r\n      p.x += signX;\r\n      ix++;\r\n    } else {\r\n      // next step is vertical\r\n      p.y += signY;\r\n      iy++;\r\n    }\r\n    points.push({ ...p });\r\n  }\r\n  return points;\r\n}\r\n", "import Engine from \"@app/Engine\";\r\nimport { Terminal } from \"wglt\";\r\n\r\nfunction loadEngine(parent: HTMLElement) {\r\n  const cols = 60;\r\n  const rows = 40;\r\n\r\n  const container = document.createElement(\"div\");\r\n  parent.appendChild(container);\r\n  const onResize = () => {\r\n    const wantWidth = cols * 8;\r\n    const wantHeight = rows * 8;\r\n\r\n    const ratioWidth = Math.floor(window.innerWidth / wantWidth);\r\n    const ratioHeight = Math.floor(window.innerHeight / wantHeight);\r\n    const ratio = Math.min(ratioWidth, ratioHeight);\r\n\r\n    container.style.width = `${wantWidth * ratio}px`;\r\n    container.style.height = `${wantHeight * ratio}px`;\r\n  };\r\n  window.addEventListener(\"resize\", onResize);\r\n  onResize();\r\n\r\n  const canvas = document.createElement(\"canvas\");\r\n  container.appendChild(canvas);\r\n\r\n  const term = new Terminal(canvas, cols, rows);\r\n  const g = new Engine(term);\r\n  g.gotoDemoRoom();\r\n  (window as any).g = g;\r\n}\r\n\r\nwindow.addEventListener(\"load\", () => loadEngine(document.body));\r\n"],
  "mappings": "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",
  "names": ["require_wglt", "__commonJSMin", "exports", "module", "import_wglt", "Entity", "g", "name", "e", "callback", "_a", "c", "tag", "x", "y", "at", "compareEntities", "a", "b", "_b", "_c", "_d", "layerA", "layerB", "battleship_exports", "__export", "Battleship", "BattleshipHull", "import_wglt", "Layer", "Layer_default", "Battleship", "g", "parent", "Entity", "BattleshipHull", "Layer_default", "bullet_exports", "__export", "Bullet", "HomingMissile", "import_wglt", "Bullet", "g", "Entity", "Layer_default", "HomingMissile", "effect_exports", "__export", "SmokePuff", "import_wglt", "SmokePuff", "g", "Entity", "Layer_default", "gun_exports", "__export", "HomingMissileLauncher", "MachineGun", "import_wglt", "MachineGun", "g", "Entity", "Layer_default", "HomingMissileLauncher", "player_exports", "__export", "Player", "import_wglt", "Player", "g", "Entity", "Layer_default", "AllPrefabs", "__spreadValues", "battleship_exports", "bullet_exports", "effect_exports", "gun_exports", "player_exports", "instantiate", "g", "name", "int", "n", "intPosition", "pos", "SortedList", "compareFn", "items", "item", "tau", "angleDiff", "x", "y", "a", "b", "angleMove", "mo", "dx", "dy", "turretReducer", "state", "walkGrid", "p0", "p1", "dx", "dy", "nx", "ny", "signX", "signY", "p", "__spreadValues", "points", "ix", "iy", "MAP_WIDTH", "MAP_HEIGHT", "Engine", "term", "SortedList", "compareEntities", "player", "e", "name", "instantiate", "es", "sx", "sy", "w", "h", "map", "yo", "xo", "wall", "x", "y", "entities", "cell", "visible", "color", "draw", "g", "b", "appearance", "position", "int", "pos", "ipos", "_a", "_b", "solid", "lifetime", "playerPos", "homing", "motion", "desired", "diff", "angleDiff", "turret", "turretReducer", "ignoreSolid", "trail", "src", "__spreadValues", "dx", "dy", "angleMove", "dst", "line", "walkGrid", "intPosition", "reached", "hitWall", "hitEntity", "move", "import_wglt", "loadEngine", "parent", "container", "onResize", "ratioWidth", "ratioHeight", "ratio", "canvas", "term", "g", "Engine"]
}
